#!/usr/bin/lua

--[[ gets file paths needed, 
--	colourPath: a file with the wal colour values
--	rofiPath:   the rofi theme file
--]]
colourPath = os.getenv("HOME") .. "/.cache/wal/colors"
rofiPath = os.getenv("HOME") .. "/.config/rofi/theme.rasi"

colourFile = io.open(colourPath)

--the colour list is used to store the colour values from the wal 'colors' file
colours = {}
--'line' is used where single lines need to be stored throughout the program
line = colourFile:read()
counter = 1

--[[ 
--	this section reads in the first 10 colour values
--	from the 'colourPath', and stores them to
--	the 'colours' list. It only takes the first
--	10 because beyond that wal just repeats 
--	the values... for some reason
--]]
while( counter < 10 ) do
	colours[counter] = line
	line = colourFile:read()
	counter = counter + 1
end

io.close(colourFile)
--this is used to store the lines of the rofi theme file
lines = {}
rofiFile = io.open(rofiPath)
line = rofiFile:read()

--[[ 
--	this part reads the lines of the rofi theme file to the 'lines' table
--	(io.read returns a nil value when it reaches the end of the file)
--]]
while( line ~= nil ) do
	table.insert(lines, line)
	line = rofiFile:read()
end

io.close(rofiFile)
line = lines[1]
counter = 1
continue = true

--[[
--	I am sure there is a better way to do this, but this 
--	essentially moves the file 'cursor' to the start of 
--	the variable thing declaration block, using rather
--	janky code, but yeah
--]]
while( continue ) do
	if ( line == "* {" ) then
		continue = false
	end

	counter = counter + 1
	line = lines[counter]
end

--[[
--	this is the important bit. It reads through the lines, 
--	starting from where the last section left it, and where
--	the line is not blank, it breaks it down to get the name 
--	of the attribute being set, and if it is one of the
--	attributes that should be changed, recreates the line
--	with the new value.
--
--	to configure this to your style of colour scheme, change 
--	the attributes being checked for in the 'if' block to match
--	your .rasi file, and change the colour values applied to
--	each, with transparency values if needed (the colour values
--	are in hex, so use #RRGGBBAA style).
--
--	I may change this to be easier to configure in the future,
--	if I can be bothered/if anyone is interested
--]]
while ( line ~= "}" ) do
	if ( line ~= "" ) then
		local temp = line:sub(5, line:find(":") - 1)

		if temp == "foreground" then 
			lines[counter] = "    " .. temp .. ": " .. colours[8] .. ";"
		elseif temp == "background" then
			lines[counter] = "    " .. temp .. ": " .. colours[1] .. "CC" .. ";"
		elseif temp == "focusfg" then
			lines[counter] = "    " .. temp .. ": " .. colours[2] .. ";"
		elseif temp == "focusbg" then
			lines[counter] = "    " .. temp .. ": " .. colours[7] .. "DD" .. ";"
		elseif temp == "urgent" then
			lines[counter] = "    " .. temp .. ": " .. colours[4] .. ";"
		end
	end

	counter = counter + 1
	line = lines[counter]
end

rofiFile = io.open(rofiPath, "w+")

-- finally, write the lines, with any changes, back to the file
for i = 1, #lines do
	rofiFile:write(lines[i], "\n")
end

io.close(rofiFile)
